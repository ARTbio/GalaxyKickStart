- hosts: all
  remote_user: "{{ lookup('env','USER') }}"
  sudo: yes

  vars:
    #Globals
#    galaxy_data: "{{ lookup('env','GALAXY_DATA') }}"
#    galaxy_hostname: "{{ lookup('env','INSTALL_HOSTNAME') }}"
#    galaxy_user: "{{ lookup('env','GALAXY_USER') }}"
#    galaxy_port: "{{ lookup('env','GALAXY_PORT') }}"
#    ftp_port: "{{ lookup('env','FTP_PORT') }}"
    galaxy_data: "/galaxy_data/"
    galaxy_hostname: "localhost"
    galaxy_user: "galaxy"
    galaxy_port: "8080"
    ftp_port: "21"
    galaxy_host: "0.0.0.0"
    galaxy_admin: "artimed@gmail.com"
    galaxy_dir: "/home/{{ galaxy_user }}/{{ galaxy_user }}"
    galaxy_venv: "{{ galaxy_dir }}/venv/"
    galaxy_ftp: "{{ galaxy_dir }}/database/ftp/"
    galaxy_api: 379ab2a47d714a74b5cee4081703368e
    galaxy_db: "postgresql:///{{ galaxy_user }}?host=/var/run/postgresql"

  pre_tasks:
#    - fail: msg="You must specify at least a network name or IP address in playbook INSTALL_HOSTNAME parameter (example - INSTALL_HOSTNAME=8.8.8.8 ansible-playbook -i 'localhost,' galaxy.yml). Installation failed."
#      when: ((galaxy_hostname is undefined) or (galaxy_hostname is none) or (galaxy_hostname|trim == ''))
#    - set_fact: galaxy_data="/galaxy_data/"
#      when: ((galaxy_data is undefined) or (galaxy_data is none) or (galaxy_data|trim == ''))
#    - set_fact: galaxy_user="galaxy"
#      when: ((galaxy_user is undefined) or (galaxy_user is none) or (galaxy_user|trim == ''))
#    - set_fact: galaxy_port="8080"
#      when: ((galaxy_port is undefined) or (galaxy_port is none) or (galaxy_port|trim == ''))
#    - set_fact: ftp_port="21"
#      when: ((ftp_port is undefined) or (ftp_port is none) or (ftp_port|trim == ''))

  roles:
    #installs system package requirements
    - role: galaxyprojectdotorg.galaxy-os
      configure_docker: no
      galaxy_user_name: "{{ galaxy_user }}"
      galaxy_user_uid: 1055

    #this role included in galaxyprojectdotorg.galaxy as a submodule to create galaxy user and its db 
    - role: natefoo.postgresql_objects
      postgresql_objects_users:
        - name: "{{ galaxy_user }}"
          password: "{{ galaxy_user }}"
      postgresql_objects_databases:
        - name: "{{ galaxy_user }}"
          owner: "{{ galaxy_user }}"
      sudo: yes
      sudo_user: postgres

    #installs galaxy
    - role: galaxyprojectdotorg.galaxy
      #galaxy_manage_clone: no
      galaxy_manage_database: no
      galaxy_fetch_eggs: no
      galaxy_changeset_id: master
      galaxy_vcs: git
      galaxy_venv_dir: "{{ galaxy_venv }}"
      galaxy_server_dir: "{{ galaxy_dir }}/"
      galaxy_config_dir: "{{ galaxy_dir }}/config/"
      galaxy_config:
        "server:main":
          use_threadpool: True
          use: "egg:Paste#http"
          use_threadpool: True
        "server:handler0":
          use: "egg:Paste#http"
          use_threadpool: True
          host: "{{ galaxy_host }}"
          port: "{{ galaxy_port | int + 0 }}"
          threadpool_workers: 10
        "server:handler1":
          use: "egg:Paste#http"
          use_threadpool: True
          host: "{{ galaxy_host }}"
          port: "{{ galaxy_port | int + 1 }}"
          threadpool_workers: 10
        "app:main":
          admin_users: "{{ galaxy_admin }}"
          database_connection: "{{ galaxy_db }}"
          tool_dependency_dir: "{{ galaxy_dir }}/lib/tool_shed/dependencies/"
          master_api_key: "{{ galaxy_api }}"
          ftp_upload_dir: "{{ galaxy_ftp }}" 
          ftp_upload_site: "ftp {{ galaxy_hostname }} port {{ ftp_port }}"
          #to be done only in production       
          #debug: False
          #use_interactive: False
          nginx_x_accel_redirect_base: "/_x_accel_redirect"
          nginx_x_archive_files_base: "/_x_accel_redirect"
          nginx_upload_store: "/tmp"
          nginx_upload_path: "/_upload"
        "uwsgi":
          stats: "{{ galaxy_hostname }}:9191"
          socket: "{{ galaxy_hostname }}:4001"
          master: True
          logto: "{{ galaxy_dir }}/uwsgi.log"
          pythonpath: lib
          threads: 4
          processes: "{{ galaxy_web_processes }}"
          #log-maxsize: 134217728
          #single-interpreter: True
          #log-master-bufsize: 15865856
          #module: galaxy.webapps.galaxy.buildapp:uwsgi_app_factory()
          #set: galaxy_config_file="{{ galaxy_dir }}/config/galaxy.ini"
          #set: galaxy_root="{{ galaxy_dir }}"
          #logdate: True
      sudo: yes
      sudo_user: "{{ galaxy_user }}"

    #installs nginx and proftpd
    - role: galaxyprojectdotorg.galaxy-extras
      galaxy_root: "{{ galaxy_dir }}/"
      galaxy_venv_dir:  "{{ galaxy_venv }}"
      galaxy_database_connection: "{{ galaxy_db }}"
      galaxy_paste_handlers: true
      galaxy_extras_install_packages: true
      galaxy_extras_config_nginx: true
      galaxy_extras_config_supervisor: true
      galaxy_extras_config_proftpd: true
      galaxy_extras_config_uwsgi: true
      galaxy_extras_config_galaxy_job_metrics: true
      galaxy_extras_config_slurm: true
      galaxy_extras_config_galaxy_root: true
      galaxy_extras_config_ie_proxy: false
      galaxy_extras_config_scripts: false
      galaxy_extras_config_startup: false
      supervisor_manage_postgres: true
      supervisor_manage_nginx: true
      supervisor_manage_proftp: true
      supervisor_manage_slurm: true
      supervisor_manage_reports: true
      supervisor_manage_docker: false
      supervisor_manage_nodeproxy: false
      supervisor_manage_ie_proxy: false

  tasks:      
    - include: proftpd.yml
      