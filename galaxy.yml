- hosts: all
  sudo: yes

  vars:
    #Globals
    galaxy_hostname: "{{ inventory_hostname }}" # Used by galaxy and galaxy-tools roles
    galaxy_venv_dir: "{{ galaxy_server_dir }}/.venv" # Used by galaxy and galaxy-tools roles 
    manage_postgresql: true # Used by artimed_extras and galaxy-extras roles 
    service_postgresql: false # Used by artimed_extras and galaxy-extras roles
#    supervisor_postgres_options: "" # Used by artimed_extras and galaxy-extras roles
    #Persistent data
    galaxy_ftp: "{{ galaxy_data }}/database/ftp" # Used by artimed_extras and galaxy roles
    galaxy_config_dir: "{{ galaxy_data }}/config" # Used by artimed_extras and galaxy roles
    galaxy_mutable_data_dir: "{{ galaxy_data }}/database" # Used by artimed_extras and galaxy roles
    galaxy_config_file: "{{ galaxy_config_dir }}/galaxy.ini" # Used by galaxy roles
    tool_data_path: "{{ galaxy_data }}/tool-data"
    tool_path: "{{ galaxy_data }}/tools"
    tool_dependency_dir: "{{ galaxy_data }}/tool_shed_dependencies"

  roles:
    #Installs system package requirements
    - role: galaxyprojectdotorg.galaxy-os
      configure_docker: no
      tags: 
        - install_galaxy
    
    #Based on marius stuff
    - role: postgresql.check
      start_postgresql: false
      tags: 
        - install_galaxy
    
    #Move postgresql db to a persistent dir and symlinks to galaxy
    - role: postgresql.movedb
      tags: 
        - install_galaxy

    #This role included in galaxyprojectdotorg.galaxy as a submodule to create galaxy user and its db 
    - role: natefoo.postgresql_objects
      postgresql_objects_users:
        - name: "{{ galaxy_user_name }}"
          password: "{{ galaxy_user_name }}"
      postgresql_objects_databases:
        - name: "{{ galaxy_user_name }}"
          owner: "{{ galaxy_user_name }}"
      sudo: yes
      sudo_user: postgres
      tags: 
        - install_galaxy

    #Installs galaxy
    - role: galaxyprojectdotorg.galaxy
      #persistent data
      galaxy_manage_mutable_setup: yes
      galaxy_mutable_config_dir: "{{ galaxy_config_dir }}"
      galaxy_eggs_path: "{{ galaxy_data }}/eggs"
      #other vars
      galaxy_manage_database: yes
      galaxy_fetch_eggs: yes
      galaxy_vcs: git
      galaxy_force_checkout: yes #for testing this is good 
      galaxy_config:
        "app:main":
          admin_users: "{{ galaxy_admin_email }}"
          database_connection: "{{ galaxy_db }}"
          shed_tool_data_path: "{{ galaxy_data }}/tool-data"
          galaxy_data_manager_data_path: "{{ galaxy_data }}/tool-data"
          master_api_key: "{{ master_api_key }}"
          ftp_upload_dir: "{{ galaxy_ftp }}" 
          ftp_upload_site: "ftp {{ galaxy_hostname }}"
          tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
          #galaxy_shed_tool_conf_file: "{{ galaxy_config_dir }}/tool_conf.xml" #must be build by me???
          #to be done only in production       
          #debug: False
          #use_interactive: False
          static_enabled: false
          nginx_x_accel_redirect_base: "/_x_accel_redirect"
          nginx_x_archive_files_base: "/_x_accel_redirect"
          nginx_upload_store: "/tmp"
          nginx_upload_path: "/_upload"
        "uwsgi":
          master: True
      sudo: yes
      sudo_user: "{{ galaxy_user_name }}"
      tags: 
        - install_galaxy

    #Installs nginx and proftpd
    - role: galaxyprojectdotorg.galaxy-extras
      galaxy_uwsgi_static_conf: true
      supervisor_slurm_config_dir: "{{ galaxy_data }}"
      galaxy_root: "{{ galaxy_server_dir }}"
      galaxy_log_dir: "{{ galaxy_data }}"
      galaxy_database_connection: "{{ galaxy_db }}"
      galaxy_extras_config_scripts: true
      galaxy_extras_install_packages: true
      galaxy_extras_config_nginx: true
      galaxy_extras_config_supervisor: true
      galaxy_extras_config_proftpd: true
      galaxy_extras_config_uwsgi: true
      galaxy_extras_config_galaxy_job_metrics: true
      galaxy_extras_config_slurm: true
      galaxy_extras_config_galaxy_root: true
      galaxy_extras_config_ie_proxy: false
      supervisor_manage_postgres: "{{ manage_postgresql }}"
      supervisor_manage_nginx: true
      supervisor_manage_proftp: true
      supervisor_manage_slurm: true
      supervisor_manage_reports: true
      supervisor_manage_docker: false
      supervisor_manage_nodeproxy: false
      supervisor_manage_ie_proxy: false      
      tags: 
        - install_extras

    #Fix proftpd config file, restarts supervisor tasks, put the test tool shed in the list and create a welcome page
    - role: artimed_extras
      run_extras: true
      pbkdf2: true
      tags: 
        - install_extras
    
    #Check if config and database directories persisted on galaxy (it does nothing if galaxy_data == galaxy_server_dir)
    - role: galaxy.movedata
      move_to_persistent: true
      tags: 
        - persists_galaxy

    #Create the galaxy admin user
    - role: galaxy.createuser
      tags:
        - create_admin

    #The default data managers are listed in the file data_manager_list.yaml
    - role: galaxyprojectdotorg.galaxy-tools 
      galaxy_tools_api_key: "{{ master_api_key }}"
      galaxy_tools_galaxy_instance_url: "{{ galaxy_hostname }}"
      galaxy_tools_tool_list: "{{ data_manager_list }}"
      sudo: yes
      sudo_user: "{{ galaxy_user_name }}"
      tags: 
        - install_data_managers

    #The default tools are listed in the file artimed_tool_list.yaml
    - role: galaxyprojectdotorg.galaxy-tools
      galaxy_tools_api_key: "{{ master_api_key }}"
      galaxy_tools_galaxy_instance_url: "{{ galaxy_hostname }}"
      galaxy_tools_tool_list: "{{ galaxy_tool_list }}"
      sudo: yes
      sudo_user: "{{ galaxy_user_name }}"
      tags: 
        - install_tools

    #Create/delete a bootstrap admin user and run data managers
    - role: artimed_extras
      run_data_managers: true
      galaxy_tools_admin_user_password: "{{ galaxy_admin_pw }}"
      create_user: true
      tags: 
        - import_genomes