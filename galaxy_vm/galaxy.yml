- hosts: all
  remote_user: vagrant
  sudo: yes

  vars:
    #Globals
    galaxy_user: galaxy
    galaxy_port: 8080
    galaxy_host: "0.0.0.0"
    galaxy_admin: "artimed@gmail.com"
    galaxy_dir: "/home/{{ galaxy_user }}/{{ galaxy_user }}"
    #Galaxy role variables
    galaxy_manage_clone:
      galaxy_vcs: git
    galaxy_server_dir: "{{ galaxy_dir }}/"
    galaxy_config_dir: "{{ galaxy_dir }}/config/"
    galaxy_config:
      "server:main":
        host: "{{ galaxy_host }}"
        port: "{{ galaxy_port }}"
      "app:main":
        admin_users: "{{ galaxy_admin }}"
        database_connection: "postgresql:///{{ galaxy_user }}?host=/var/run/postgresql"
        tool_dependency_dir: "{{ galaxy_dir }}/lib/tool_shed/dependencies/"
        master_api_key: 379ab2a47d714a74b5cee4081703368e
    postgresql_objects_users:
      - name: "{{ galaxy_user }}"
        password: "{{ galaxy_user }}"
    postgresql_objects_databases:
      - name: "{{ galaxy_user }}"
        owner: "{{ galaxy_user }}"
    #Galaxy tools variables
    galaxy_tools_api_key: 379ab2a47d714a74b5cee4081703368e
    galaxy_tools_admin_user: "{{ galaxy_admin }}"
    galaxy_server_dir: "{{ galaxy_dir }}"
    galaxy_tools_tool_list_files: [ "tool_list.yaml", "artimed_tool_list.yaml" ]

  roles:
    - role: galaxyprojectdotorg.galaxy-os
      galaxy_user_name: "{{ galaxy_user }}"
      galaxy_user_uid: 1005
      configure_docker: no
    - role: galaxyprojectdotorg.galaxy-postgresql
    - role: natefoo.postgresql_objects #this role is included in galaxyprojectdotorg.galaxy
      sudo: yes
      sudo_user: postgres
    - role: galaxyprojectdotorg.galaxy
      sudo: yes
      sudo_user: "{{ galaxy_user }}"
      galaxy_manage_database: no      
    - role: galaxyprojectdotorg.galaxy-extras
      galaxy_extras_config_nginx: yes
      galaxy_extras_config_supervisor: yes
    - role: galaxyprojectdotorg.galaxy-tools
#TopHat/HISAT, BWA, FeatureCount, DESeq/EdgeR, SAM Tools, GATK, BALSA, Isaac, R packages  
#Create a system service for galaxy
#  - shell: cp /home/{{ galaxy_user }}/{{ galaxy_user }}/contrib/galaxy.debian-init /etc/init.d/{{ galaxy_user }}
#    become_user: root
#    become_method: sudo    

#  - service: name={{ galaxy_user }} state=started
#    become_user: root
#    become_method: sudo  
