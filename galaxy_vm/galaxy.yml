- hosts: all
  remote_user: vagrant
  sudo: yes

  vars:
    galaxy_user: galaxy
    #Postgresql role variables
    postgresql_users:
      - name: "{{ galaxy_user }}"
    postgresql_databases:
      - name: "{{ galaxy_user }}"
        owner: "{{ galaxy_user }}"
    #Galaxy role variables
    galaxy_manage_clone:
      galaxy_vcs: git
    galaxy_server_dir: "/home/{{ galaxy_user }}/{{ galaxy_user }}/"
    galaxy_config_dir: "/home/{{ galaxy_user }}/{{ galaxy_user }}/config/"
    galaxy_config:
      "server:main":
        host: "0.0.0.0"
        port: "8080"
      "app:main":
        admin_users: "artimed@gmail.com"
        database_connection: "postgresql:///{{ galaxy_user }}?host=/var/run/postgresql"
        tool_dependency_dir: "/home/{{ galaxy_user }}/{{ galaxy_user }}/lib/tool_shed/dependencies/"
    galaxy_tools_api_key: 379ab2a47d714a74b5cee4081703368e
    galaxy_install_bootstrap_user: artimed
    galaxy_tools_admin_user_password: artimed
    #Dependencies
#    git_package: git
#    mercurial_package: mercurial
#    virtualenv_package: python-virtualenv
#    pip_package: python-pip
#    build_package: build-essential
#    psycopg2_package: python-psycopg2

#  pre_tasks:
  #Dependencies
#  - name: install pre-dependencies packages
#    action: apt pkg={{ item }} state=latest update_cache=yes
#    with_items:
#       - "{{ build_package }}"
#       - "{{ git_package }}"
#       - "{{ mercurial_package }}"
#       - "{{ virtualenv_package }}"
#       - "{{ pip_package }}"
#       - "{{ psycopg2_package }}"
#    become_user: root
#    become_method: sudo    

#  #Linux galaxy user
#  - user: name={{ galaxy_user }} shell=/bin/bash groups=admin password={{ galaxy_user }} home=/home/{{ galaxy_user }}/ createhome=yes append=yes system=yes 
#    become_user: root
#    become_method: sudo    

  roles:
    - role: ANXS.postgresql
      postgresql_cluster_reset: yes
    - role: galaxyprojectdotorg.galaxy-os
      galaxy_user_name: "{{ galaxy_user }}"
      configure_docker: no
    - role: galaxyprojectdotorg.galaxy
      sudo: yes
      sudo_user: "{{ galaxy_user }}"
      galaxy_manage_database: no      
    - role: galaxyprojectdotorg.galaxyextras
    - role: galaxyprojectdotorg.tools

#  tasks:
#    - file: path=/home/{{ galaxy_user }} state=directory owner={{ galaxy_user }}
#      become_user: root
#      become_method: sudo    
    
#Create a system service for galaxy
#  - shell: cp /home/{{ galaxy_user }}/{{ galaxy_user }}/contrib/galaxy.debian-init /etc/init.d/{{ galaxy_user }}
#    become_user: root
#    become_method: sudo    

#  - service: name={{ galaxy_user }} state=started
#    become_user: root
#    become_method: sudo  
