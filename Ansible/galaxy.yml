#before vagant up, write the code for:
#   galaxy requirements intalation 
#   galaxy instalation
#   galaxy configurations
#   tools instalation
#   tools test
#Docker?

- hosts: all
  remote_user: vagrant
  sudo: yes

  vars:
    local_home: "{{ lookup('env','HOME') }}"
    galaxy_relative_dir: galaxy_ARTiMED
    galaxy_ip: 0.0.0.0
    galaxy_port: 80
    toolshed_ip: 0.0.0.0
    toolshed_port: 200
    postgresql_package: postgresql-9.4
    git_package: git 
    python27_package: python2.7
    pip_package: python-pip
    pythondev_package: python-dev
    build_package: build-essential
    ve_package: python-virtualenv
    software_package: software-properties-common
    
  tasks:
  - name: install git on Debian VM
    apt: pkg={{ git_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install Python 2.7 on Debian VM
    apt: pkg={{ python27_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install pip on Debian VM
    apt: pkg={{ pip_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install Python dev on Debian VM
    apt: pkg={{ pythondev_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install build essentials on Debian VM
    apt: pkg={{ build_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install virtualenv on Debian VM
    apt: pkg={{ ve_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install Python commons on Debian VM
    apt: pkg={{ software_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install postgresql on Debian VM
    apt: pkg={{ postgresql_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

#  - replace: dest=/etc/postgresql/9.3/main/pg_hba.conf regexp='host    all             all             127.0.0.1/32            md5' replace='host    all             all             127.0.0.1/32            trust' backup=no
#    become_user: postgres
#    become_method: sudo    

  - shell: pg_createcluster 9.4 main --start
    become_user: root
    become_method: sudo    

  - pip: name=planemo
    become_user: root
    become_method: sudo    

  - user: name=galaxy shell=/bin/bash groups=admins password=galaxy home=/home/galaxy/ createhome=yes append=yes
    become_user: root
    become_method: sudo    

  - postgresql_user: db=galaxy name=galaxy
    become_user: postgres
    become_method: sudo    

  - postgresql_db: name=galaxy owner=galaxy
    become_user: postgres
    become_method: sudo    

  - git: repo=https://github.com/galaxyproject/galaxy/ dest=/home/galaxy/{{ galaxy_relative_dir }}/ clone=yes update=yes
    become_user: galaxy
    become_method: sudo    
  
  - copy: src=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini.sample dest=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini
    become_user: galaxy
    become_method: sudo    

  - copy: src=/home/galaxy/{{ galaxy_relative_dir }}/config/tool_sheds_conf.xml.sample dest=/home/galaxy/{{ galaxy_relative_dir }}/config/tool_sheds_conf.xml
    become_user: galaxy
    become_method: sudo    

  - replace: dest=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini regexp='#host = 127.0.0.1' replace='host = 0.0.0.0' backup=no
    become_user: galaxy
    become_method: sudo    

  - replace: dest=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini regexp='#tool_dependency_dir = None' replace='tool_dependency_dir = ../dependencies/' backup=no
    become_user: galaxy
    become_method: sudo    
   
  - replace: dest=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini regexp='#admin_users = None' replace='admin_users = fabiorjvieira@gmail.com' backup=no
    become_user: galaxy
    become_method: sudo    

  #config posgresql
  - replace: dest=/home/galaxy/{{ galaxy_relative_dir }}/config/galaxy.ini regexp='#database_connection = sqlite:///./database/universe.sqlite?isolation_level=IMMEDIATE' replace='database_connection = postgresql:///galaxy?host=/var/run/postgresql' backup=no
    become_user: galaxy
    become_method: sudo    

  - lineinfile: dest=/home/galaxy/{{ galaxy_relative_dir }}/config/tool_sheds_conf.xml line='   <tool_shed name="ARTbio Tool Shed" url="https://lbcd41.snv.jussieu.fr/toolshed/"/>' regexp='<tool_sheds>' state=present insertafter=yes
    become_user: galaxy
    become_method: sudo    
