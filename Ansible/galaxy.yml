#before vagant up, write the code for:
#   galaxy requirements intalation 
#   galaxy instalation
#   galaxy configurations
#   tools instalation
#   tools test
#Docker?

- hosts: all
  remote_user: vagrant
  sudo: yes

  vars:
    local_home: "{{ lookup('env','HOME') }}"
    galaxy_relative_dir: galaxy_ARTiMED
    galaxy_ip: 0.0.0.0
    galaxy_port: 80
    toolshed_ip: 0.0.0.0
    toolshed_port: 200
    postgresql_package: postgresql
    apache_package: apache2
    git_package: git 
    python27_package: python2.7
    pip_package: python-pip
    pythondev_package: python-dev
    build_package: build-essential
    ve_package: python-virtualenv
    software_package: software-properties-common
    
  tasks:
  - name: install git on Debian VM
    apt: pkg={{ git_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install Python 2.7 on Debian VM
    apt: pkg={{ python27_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install pip on Debian VM
    apt: pkg={{ pip_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install Python dev on Debian VM
    apt: pkg={{ pythondev_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install build essentials on Debian VM
    apt: pkg={{ build_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install virtualenv on Debian VM
    apt: pkg={{ ve_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install Python commons on Debian VM
    apt: pkg={{ software_package }} state=latest update_cache=yes
    become_user: root
    become_method: sudo    

  - name: install postgresql on Debian VM
    apt: pkg={{ postgresql_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - name: install apache on Debian VM
    apt: pkg={{ apache_package }} state=latest update_cache=no
    become_user: root
    become_method: sudo    

  - git: repo=https://github.com/galaxyproject/galaxy/ dest={{ local_home }}/{{ galaxy_relative_dir }}/ clone=yes update=yes
    become_user: root
    become_method: sudo    

  - pip: name=planemo
    become_user: root
    become_method: sudo    

    #config galaxy.ini and posgresql and toolsheds ans (toolshed?)